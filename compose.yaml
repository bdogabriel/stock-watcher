services:

  redis:
    container_name: redis
    image: redis
    restart: always
    volumes:
      - redis-data:/data
    entrypoint: redis-server --appendonly yes

  django:
    container_name: django
    build:
      context: ./stockwatcher
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - stock-watcher:/usr/src/app/
    ports:
      - 8001:8000
    environment:
      - DEBUG=${DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - redis

  celery:
    container_name: celery
    build:
      context: ./stockwatcher
    command: celery --app=stockwatcher worker -l INFO
    volumes:
      - stock-watcher:/usr/src/app/
    environment:
      - DEBUG=${DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - redis
      - django

volumes:
  stock-watcher:
    name: stock-watcher-volume
  redis-data:
    name: stock-watcher-redis-data-volume
